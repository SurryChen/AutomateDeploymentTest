# 名称
name: Auto Deploy Test

on:
  # 触发事件：master分支有更新
  push:
    branches: ["master"]

  # 允许手动更新
  workflow_dispatch:

# 获取读取权限
permissions:
  contents: read

# 设置并发部署方案
concurrency:
  # 只有设置了一个组，而一个组只能有一个在并发部署
  group: "deploy"
  # 不取消冲突的部署，而是按照排队进行
  cancel-in-progress: false

# 默认进入Bash执行
defaults:
  run:
    shell: bash

# 构建流水线jobs
jobs:
  # 构建job
  build:
    # 运行环境
    runs-on: ubuntu-latest
    # 步骤
    steps:
        # 复制代码到目录下
      - name: Checkout repository
        uses: actions/checkout@v2

        # 安装JDK环境与Maven环境
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          maven-version: '3.8.1'

        # 编译
      - name: Compile and package
        run: mvn clean install

        # 使用Docker打包镜像
      - name: Build and push Docker image
        run: |
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }} ;
            docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }} --build-arg=JAR_FILE=target/${{ secrets.JAR_NAME }}.jar --build-arg=PORT=${{ secrets.PORT }};
            docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}

        # 连接服务器并更新Docker镜像
      - name: Run command on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          command: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest ;
            docker run -d --name my_container -p ${{ secrets.PORT }}:${{ secrets.PORT }} ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest